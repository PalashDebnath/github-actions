name: Deployment conditions
on:
  push:
    branches:
      - main
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      cache: ${{ steps.cache.outputs.dir }}
    steps:
      - name: Get project
        uses: actions/checkout@v3
      - name: Get cache directory path
        id: cache
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.cache.outputs.dir }}
          key: deps-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: npm install
      - name: Test project
        id: run-test
        run: npm run test
      - name: Upload test report
        if: ${{ failure() && steps.run-test.outcome == 'failure' }}
        run: echo "Uploaded test report...."
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      filename: ${{ steps.publish.outputs.fname }}
    steps:
      - name: Get project
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ needs.test.outputs.cache }}
          key: deps-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: npm install
      - name: Build project
        run: npm run build
      - name: Publish filename
        id: publish
        run: find build/static/js/main.*.js -type f -execdir echo "fname={}" >> $GITHUB_OUTPUT ";"
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: build
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact
      - name: Output artifact content
        run: ls
      - name: Output filename
        run: echo "${{ needs.build.outputs.filename }}"
      - name: Deploy artifact
        run: echo "Deployed...."
